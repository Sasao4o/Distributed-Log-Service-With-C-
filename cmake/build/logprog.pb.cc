// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logprog.proto

#include "logprog.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace logprog {
namespace v1 {

inline constexpr Record::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Record::Record(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordDefaultTypeInternal() {}
  union {
    Record _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordDefaultTypeInternal _Record_default_instance_;

inline constexpr ProduceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : offset_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ProduceResponse::ProduceResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProduceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProduceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProduceResponseDefaultTypeInternal() {}
  union {
    ProduceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProduceResponseDefaultTypeInternal _ProduceResponse_default_instance_;

inline constexpr ConsumeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : offset_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConsumeRequest::ConsumeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConsumeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConsumeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConsumeRequestDefaultTypeInternal() {}
  union {
    ConsumeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConsumeRequestDefaultTypeInternal _ConsumeRequest_default_instance_;

inline constexpr ProduceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        record_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ProduceRequest::ProduceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProduceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProduceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProduceRequestDefaultTypeInternal() {}
  union {
    ProduceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProduceRequestDefaultTypeInternal _ProduceRequest_default_instance_;

inline constexpr ConsumeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        record_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ConsumeResponse::ConsumeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConsumeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConsumeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConsumeResponseDefaultTypeInternal() {}
  union {
    ConsumeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConsumeResponseDefaultTypeInternal _ConsumeResponse_default_instance_;
}  // namespace v1
}  // namespace logprog
static ::_pb::Metadata file_level_metadata_logprog_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_logprog_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_logprog_2eproto = nullptr;
const ::uint32_t TableStruct_logprog_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::logprog::v1::ProduceRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::logprog::v1::ProduceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::logprog::v1::ProduceRequest, _impl_.record_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::logprog::v1::ProduceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::logprog::v1::ProduceResponse, _impl_.offset_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::logprog::v1::ConsumeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::logprog::v1::ConsumeRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::logprog::v1::ConsumeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::logprog::v1::ConsumeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::logprog::v1::ConsumeResponse, _impl_.record_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::logprog::v1::Record, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::logprog::v1::Record, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::logprog::v1::Record, _impl_.offset_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::logprog::v1::ProduceRequest)},
        {10, -1, -1, sizeof(::logprog::v1::ProduceResponse)},
        {19, -1, -1, sizeof(::logprog::v1::ConsumeRequest)},
        {28, 37, -1, sizeof(::logprog::v1::ConsumeResponse)},
        {38, -1, -1, sizeof(::logprog::v1::Record)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::logprog::v1::_ProduceRequest_default_instance_._instance,
    &::logprog::v1::_ProduceResponse_default_instance_._instance,
    &::logprog::v1::_ConsumeRequest_default_instance_._instance,
    &::logprog::v1::_ConsumeResponse_default_instance_._instance,
    &::logprog::v1::_Record_default_instance_._instance,
};
const char descriptor_table_protodef_logprog_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rlogprog.proto\022\nlogprog.v1\"4\n\016ProduceRe"
    "quest\022\"\n\006record\030\001 \001(\0132\022.logprog.v1.Recor"
    "d\"!\n\017ProduceResponse\022\016\n\006offset\030\001 \001(\004\" \n\016"
    "ConsumeRequest\022\016\n\006offset\030\001 \001(\004\"5\n\017Consum"
    "eResponse\022\"\n\006record\030\002 \001(\0132\022.logprog.v1.R"
    "ecord\"\'\n\006Record\022\r\n\005value\030\001 \001(\014\022\016\n\006offset"
    "\030\002 \001(\0042\263\002\n\007Logging\022D\n\007Produce\022\032.logprog."
    "v1.ProduceRequest\032\033.logprog.v1.ProduceRe"
    "sponse\"\000\022D\n\007Consume\022\032.logprog.v1.Consume"
    "Request\032\033.logprog.v1.ConsumeResponse\"\000\022L"
    "\n\rConsumeStream\022\032.logprog.v1.ConsumeRequ"
    "est\032\033.logprog.v1.ConsumeResponse\"\0000\001\022N\n\r"
    "ProduceStream\022\032.logprog.v1.ProduceReques"
    "t\032\033.logprog.v1.ProduceResponse\"\000(\0010\001b\006pr"
    "oto3"
};
static ::absl::once_flag descriptor_table_logprog_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_logprog_2eproto = {
    false,
    false,
    564,
    descriptor_table_protodef_logprog_2eproto,
    "logprog.proto",
    &descriptor_table_logprog_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_logprog_2eproto::offsets,
    file_level_metadata_logprog_2eproto,
    file_level_enum_descriptors_logprog_2eproto,
    file_level_service_descriptors_logprog_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_logprog_2eproto_getter() {
  return &descriptor_table_logprog_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_logprog_2eproto(&descriptor_table_logprog_2eproto);
namespace logprog {
namespace v1 {
// ===================================================================

class ProduceRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ProduceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ProduceRequest, _impl_._has_bits_);
  static const ::logprog::v1::Record& record(const ProduceRequest* msg);
  static void set_has_record(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::logprog::v1::Record& ProduceRequest::_Internal::record(const ProduceRequest* msg) {
  return *msg->_impl_.record_;
}
ProduceRequest::ProduceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:logprog.v1.ProduceRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProduceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ProduceRequest::ProduceRequest(
    ::google::protobuf::Arena* arena,
    const ProduceRequest& from)
    : ::google::protobuf::Message(arena) {
  ProduceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.record_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::logprog::v1::Record>(arena, *from._impl_.record_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:logprog.v1.ProduceRequest)
}
inline PROTOBUF_NDEBUG_INLINE ProduceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ProduceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.record_ = {};
}
ProduceRequest::~ProduceRequest() {
  // @@protoc_insertion_point(destructor:logprog.v1.ProduceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProduceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.record_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProduceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:logprog.v1.ProduceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.record_ != nullptr);
    _impl_.record_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProduceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ProduceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProduceRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ProduceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .logprog.v1.Record record = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ProduceRequest, _impl_.record_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .logprog.v1.Record record = 1;
    {PROTOBUF_FIELD_OFFSET(ProduceRequest, _impl_.record_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::logprog::v1::Record>()},
  }}, {{
  }},
};

::uint8_t* ProduceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:logprog.v1.ProduceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .logprog.v1.Record record = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::record(this),
        _Internal::record(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logprog.v1.ProduceRequest)
  return target;
}

::size_t ProduceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logprog.v1.ProduceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .logprog.v1.Record record = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.record_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProduceRequest::_class_data_ = {
    ProduceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProduceRequest::GetClassData() const {
  return &_class_data_;
}

void ProduceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProduceRequest*>(&to_msg);
  auto& from = static_cast<const ProduceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:logprog.v1.ProduceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_record()->::logprog::v1::Record::MergeFrom(
        from._internal_record());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProduceRequest::CopyFrom(const ProduceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logprog.v1.ProduceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProduceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ProduceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProduceRequest::InternalSwap(ProduceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.record_, other->_impl_.record_);
}

::google::protobuf::Metadata ProduceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_logprog_2eproto_getter, &descriptor_table_logprog_2eproto_once,
      file_level_metadata_logprog_2eproto[0]);
}
// ===================================================================

class ProduceResponse::_Internal {
 public:
};

ProduceResponse::ProduceResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:logprog.v1.ProduceResponse)
}
ProduceResponse::ProduceResponse(
    ::google::protobuf::Arena* arena, const ProduceResponse& from)
    : ProduceResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ProduceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ProduceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offset_ = {};
}
ProduceResponse::~ProduceResponse() {
  // @@protoc_insertion_point(destructor:logprog.v1.ProduceResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProduceResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ProduceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:logprog.v1.ProduceResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.offset_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProduceResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ProduceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ProduceResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ProduceResponse, _impl_.offset_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ProduceResponse, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 offset = 1;
    {PROTOBUF_FIELD_OFFSET(ProduceResponse, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ProduceResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:logprog.v1.ProduceResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 offset = 1;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_offset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logprog.v1.ProduceResponse)
  return target;
}

::size_t ProduceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logprog.v1.ProduceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 offset = 1;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_offset());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProduceResponse::_class_data_ = {
    ProduceResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProduceResponse::GetClassData() const {
  return &_class_data_;
}

void ProduceResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProduceResponse*>(&to_msg);
  auto& from = static_cast<const ProduceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:logprog.v1.ProduceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProduceResponse::CopyFrom(const ProduceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logprog.v1.ProduceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProduceResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ProduceResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProduceResponse::InternalSwap(ProduceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.offset_, other->_impl_.offset_);
}

::google::protobuf::Metadata ProduceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_logprog_2eproto_getter, &descriptor_table_logprog_2eproto_once,
      file_level_metadata_logprog_2eproto[1]);
}
// ===================================================================

class ConsumeRequest::_Internal {
 public:
};

ConsumeRequest::ConsumeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:logprog.v1.ConsumeRequest)
}
ConsumeRequest::ConsumeRequest(
    ::google::protobuf::Arena* arena, const ConsumeRequest& from)
    : ConsumeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ConsumeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ConsumeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offset_ = {};
}
ConsumeRequest::~ConsumeRequest() {
  // @@protoc_insertion_point(destructor:logprog.v1.ConsumeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ConsumeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ConsumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:logprog.v1.ConsumeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.offset_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ConsumeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ConsumeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ConsumeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConsumeRequest, _impl_.offset_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ConsumeRequest, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 offset = 1;
    {PROTOBUF_FIELD_OFFSET(ConsumeRequest, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ConsumeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:logprog.v1.ConsumeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 offset = 1;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_offset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logprog.v1.ConsumeRequest)
  return target;
}

::size_t ConsumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logprog.v1.ConsumeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 offset = 1;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_offset());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ConsumeRequest::_class_data_ = {
    ConsumeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ConsumeRequest::GetClassData() const {
  return &_class_data_;
}

void ConsumeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ConsumeRequest*>(&to_msg);
  auto& from = static_cast<const ConsumeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:logprog.v1.ConsumeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConsumeRequest::CopyFrom(const ConsumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logprog.v1.ConsumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ConsumeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ConsumeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ConsumeRequest::InternalSwap(ConsumeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.offset_, other->_impl_.offset_);
}

::google::protobuf::Metadata ConsumeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_logprog_2eproto_getter, &descriptor_table_logprog_2eproto_once,
      file_level_metadata_logprog_2eproto[2]);
}
// ===================================================================

class ConsumeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ConsumeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ConsumeResponse, _impl_._has_bits_);
  static const ::logprog::v1::Record& record(const ConsumeResponse* msg);
  static void set_has_record(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::logprog::v1::Record& ConsumeResponse::_Internal::record(const ConsumeResponse* msg) {
  return *msg->_impl_.record_;
}
ConsumeResponse::ConsumeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:logprog.v1.ConsumeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ConsumeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ConsumeResponse::ConsumeResponse(
    ::google::protobuf::Arena* arena,
    const ConsumeResponse& from)
    : ::google::protobuf::Message(arena) {
  ConsumeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.record_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::logprog::v1::Record>(arena, *from._impl_.record_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:logprog.v1.ConsumeResponse)
}
inline PROTOBUF_NDEBUG_INLINE ConsumeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ConsumeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.record_ = {};
}
ConsumeResponse::~ConsumeResponse() {
  // @@protoc_insertion_point(destructor:logprog.v1.ConsumeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ConsumeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.record_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ConsumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:logprog.v1.ConsumeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.record_ != nullptr);
    _impl_.record_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ConsumeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ConsumeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConsumeResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ConsumeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .logprog.v1.Record record = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ConsumeResponse, _impl_.record_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .logprog.v1.Record record = 2;
    {PROTOBUF_FIELD_OFFSET(ConsumeResponse, _impl_.record_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::logprog::v1::Record>()},
  }}, {{
  }},
};

::uint8_t* ConsumeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:logprog.v1.ConsumeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .logprog.v1.Record record = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::record(this),
        _Internal::record(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logprog.v1.ConsumeResponse)
  return target;
}

::size_t ConsumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logprog.v1.ConsumeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .logprog.v1.Record record = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.record_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ConsumeResponse::_class_data_ = {
    ConsumeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ConsumeResponse::GetClassData() const {
  return &_class_data_;
}

void ConsumeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ConsumeResponse*>(&to_msg);
  auto& from = static_cast<const ConsumeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:logprog.v1.ConsumeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_record()->::logprog::v1::Record::MergeFrom(
        from._internal_record());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConsumeResponse::CopyFrom(const ConsumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logprog.v1.ConsumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ConsumeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ConsumeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ConsumeResponse::InternalSwap(ConsumeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.record_, other->_impl_.record_);
}

::google::protobuf::Metadata ConsumeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_logprog_2eproto_getter, &descriptor_table_logprog_2eproto_once,
      file_level_metadata_logprog_2eproto[3]);
}
// ===================================================================

class Record::_Internal {
 public:
};

Record::Record(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:logprog.v1.Record)
}
inline PROTOBUF_NDEBUG_INLINE Record::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : value_(arena, from.value_),
        _cached_size_{0} {}

Record::Record(
    ::google::protobuf::Arena* arena,
    const Record& from)
    : ::google::protobuf::Message(arena) {
  Record* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.offset_ = from._impl_.offset_;

  // @@protoc_insertion_point(copy_constructor:logprog.v1.Record)
}
inline PROTOBUF_NDEBUG_INLINE Record::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_(arena),
        _cached_size_{0} {}

inline void Record::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offset_ = {};
}
Record::~Record() {
  // @@protoc_insertion_point(destructor:logprog.v1.Record)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Record::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Record::Clear() {
// @@protoc_insertion_point(message_clear_start:logprog.v1.Record)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  _impl_.offset_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Record::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Record::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Record_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Record, _impl_.offset_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Record, _impl_.offset_)}},
    // bytes value = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Record, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes value = 1;
    {PROTOBUF_FIELD_OFFSET(Record, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 offset = 2;
    {PROTOBUF_FIELD_OFFSET(Record, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Record::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:logprog.v1.Record)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes value = 1;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // uint64 offset = 2;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_offset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:logprog.v1.Record)
  return target;
}

::size_t Record::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:logprog.v1.Record)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 1;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_value());
  }

  // uint64 offset = 2;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_offset());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Record::_class_data_ = {
    Record::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Record::GetClassData() const {
  return &_class_data_;
}

void Record::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Record*>(&to_msg);
  auto& from = static_cast<const Record&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:logprog.v1.Record)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Record::CopyFrom(const Record& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:logprog.v1.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Record::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Record::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Record::InternalSwap(Record* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
        swap(_impl_.offset_, other->_impl_.offset_);
}

::google::protobuf::Metadata Record::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_logprog_2eproto_getter, &descriptor_table_logprog_2eproto_once,
      file_level_metadata_logprog_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace logprog
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
